@model CandyShopEcommerce.MVC.ViewModels.ProductViewModel

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Update</title>

    <style>
        body {
            background-color: #FFB6C1;
        }
        /*
                body, html {
                    height: 100%;
                    background-repeat: no-repeat;
                    background-image: linear-gradient(rgb(104, 145, 162), rgb(12, 97, 33));
                }
        */
        .card-container.card {
            max-width: 1200px;
            padding: 40px 40px;
        }

        .btn {
            font-weight: 700;
            height: 36px;
            -moz-user-select: none;
            -webkit-user-select: none;
            user-select: none;
            cursor: default;
        }

        /*
         * Card component
         */
        .card {
            background-color: white;
            /* just in case there no content*/
            padding: 20px 25px 30px;
            margin: 0 auto 25px;
            margin-top: 50px;
            /* shadows and rounded borders */
            -moz-border-radius: 2px;
            -webkit-border-radius: 2px;
            border-radius: 2px;
            -moz-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);
            -webkit-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);
            box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);
        }

        .profile-img-card {
            width: 96px;
            height: 96px;
            margin: 0 auto 10px;
            display: block;
            -moz-border-radius: 50%;
            -webkit-border-radius: 50%;
            border-radius: 50%;
        }

        /*
         * Form styles
         */
        .profile-name-card {
            font-size: 16px;
            font-weight: bold;
            text-align: center;
            margin: 10px 0 0;
            min-height: 1em;
        }

        .reauth-email {
            display: block;
            color: #404040;
            line-height: 2;
            margin-bottom: 10px;
            font-size: 14px;
            text-align: center;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            -moz-box-sizing: border-box;
            -webkit-box-sizing: border-box;
            box-sizing: border-box;
        }

        .form-signin #inputEmail,
        .form-signin #inputPassword {
            direction: ltr;
            height: 44px;
            font-size: 16px;
        }

        .form-signin input[type=email],
        .form-signin input[type=password],
        .form-signin input[type=text] {
            width: 100%;
            display: inline-block;
            margin-bottom: 10px;
            z-index: 1;
            position: relative;
            -moz-box-sizing: border-box;
            -webkit-box-sizing: border-box;
            box-sizing: border-box;
        }

        .form-signin .form-control:focus {
            border-color: #FF00FF;
            outline: 0;
            -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgb(104, 145, 162);
            box-shadow: inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgb(104, 145, 162);
        }

        .btn.btn-signin {
            /*background-color: #4d90fe; */
            background-color: #FF00FF;
            /* background-color: linear-gradient(rgb(104, 145, 162), rgb(12, 97, 33));*/
            padding: 0px;
            width: 70px;
            font-weight: 700;
            font-size: 14px;
            height: 36px;
            -moz-border-radius: 3px;
            -webkit-border-radius: 3px;
            border-radius: 3px;
            border: none;
            -o-transition: all 0.218s;
            -moz-transition: all 0.218s;
            -webkit-transition: all 0.218s;
            transition: all 0.218s;
        }

        #btnNext {
            /*background-color: #4d90fe; */
            background-color: #FF00FF;
            /* background-color: linear-gradient(rgb(104, 145, 162), rgb(12, 97, 33));*/
            padding: 0px;
            color: white;
            font-weight: 700;
            font-size: 14px;
            width: 120px;
            height: 36px;
            -moz-border-radius: 3px;
            -webkit-border-radius: 3px;
            border-radius: 3px;
            border: none;
            -o-transition: all 0.218s;
            -moz-transition: all 0.218s;
            -webkit-transition: all 0.218s;
            transition: all 0.218s;
        }

        #btnSaveFAQ {
            /*background-color: #4d90fe; */
            background-color: #FF00FF;
            /* background-color: linear-gradient(rgb(104, 145, 162), rgb(12, 97, 33));*/
            padding: 0px;
            color: white;
            font-weight: 700;
            font-size: 14px;
            width: 120px;
            height: 36px;
            -moz-border-radius: 3px;
            -webkit-border-radius: 3px;
            border-radius: 3px;
            border: none;
            -o-transition: all 0.218s;
            -moz-transition: all 0.218s;
            -webkit-transition: all 0.218s;
            transition: all 0.218s;
        }

        #btnCancel {
            /*background-color: #4d90fe; */
            background-color: #FFB6C1;
            /* background-color: linear-gradient(rgb(104, 145, 162), rgb(12, 97, 33));*/
            padding: 0px;
            color: white;
            font-weight: 700;
            font-size: 14px;
            width: 120px;
            height: 36px;
            -moz-border-radius: 3px;
            -webkit-border-radius: 3px;
            border-radius: 3px;
            border: none;
            -o-transition: all 0.218s;
            -moz-transition: all 0.218s;
            -webkit-transition: all 0.218s;
            transition: all 0.218s;
        }

        #btnNext:hover {
            background-color: #FFB6C1;
        }

        .btn-block {
            display: inline-block;
            margin-top: 10px;
        }

        .btn-buttons {
            margin-top: 20px;
        }

        .btn.btn-signin:hover,
        .btn.btn-signin:active,
        .btn.btn-signin:focus {
            background-color: #FFB6C1;
        }

        .forgot-password {
            color: #FF00FF;
        }

            .forgot-password:hover,
            .forgot-password:active,
            .forgot-password:focus {
                color: #FFB6C1;
            }

        h3 {
            text-align: center;
            color: white;
        }

        .radio-form {
            margin-top: 15px;
            margin-left: 13px;
        }

            .radio-form .inner-radio-form {
                display: inline-block;
            }

                .radio-form .inner-radio-form:not(:first-child) {
                    margin-left: 15px;
                }

        #vertical-row {
            border-left: 1px solid black;
            height: 300px;
            margin-left: 50px;
        }

        .product-info {
            display: block;
        }

        .btnDetail {
            display: inline-block;
        }

        .btnLink {
            border: 0;
            padding: 0;
            display: inline;
            background: none;
            text-decoration: underline;
            color: blue;
        }

        .table-title {
            color: black;
            margin-bottom: 10px;
        }

        .row:not(:first-child), .row:not(:last-child) {
            margin-top: 20px;
        }

        #txtAreaQuestion, #txtAreaAnswer {
            width: 900px;
            height: 100px;
        }

        #txtAreaDescription {
            width: 100%;
            height: 100px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="card card-container">

            <form action="/Products/Save" method="post" id="juridicalPForm">
                <input type="hidden" value="@Model.Id" id="ProductId"/>
                <div class="container" id="elementsContainer">
                    <div class="row">
                        <div class="col-12 col-sm-12 col-md-12">
                            <div>
                                <label for="ein">Name</label>
                            </div>
                            <input class="form-control form-control-sm border-dark" type="text" id="ein" name="model.Name" value="@Model.Name">
                        </div>
                        <div class="col-12 col-sm-6 col-md-6">
                            <div>
                                <label for="ein">Purchase Price</label>
                            </div>
                            <input class="form-control form-control-sm border-dark" type="text" id="ein" name="model.PurchasePrice" value="@Model.PurchasePrice">
                        </div>

                        <div class="col-12 col-sm-6 col-md-6">
                            <div>
                                <label for="cityName">Sale Price</label>
                            </div>
                            <input class="form-control form-control-sm border-dark" type="text" id="cityName" name="model.SalePrice" value="@Model.SalePrice">
                        </div>
                        <div class="col-12 col-sm-12 col-md-12">
                            <div>
                                <label for="cityName">Description</label>
                            </div>
                            <textarea class="form-control" id="txtAreaDescription" name="model.Description">@Model.Description</textarea>
                        </div>
                        <div class="col-12 col-md-12 btn-buttons">
                            <button class="btn btn-lg btn-primary btn-block" id="btnNext" type="submit">Save</button>
                            <button type="button" class="btn btn-lg btn-primary btn-block" id="btnCancel">Back</button>
                        </div>
                    </div>
                </div>
            </form>
        </div><!-- /card-container -->
    </div><!-- /container -->

    <div class="container">
        <div class="card card-container">
            <div id="tabela">
                <h3 class="table-title">Frequently Asked Questions (FAQ)</h3>
                <table id="tblCustomers" class="table table-bordered table-sm">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Question</th>
                            <th>Answer</th>
                            <th>Register Date</th>
                        </tr>
                    </thead>
                    <tbody id="tblBodyFAQs">
                        @*@foreach (var company in Model)
                            {
                                <tr>
                                    <td>
                                        <form action="/Companies/EditForm" method="post" id="editFormId">
                                            <input type="hidden" name="model.Id" value="@company.Id" />
                                            <input type="hidden" name="model.Name" value="@company.Name" />
                                            <input type="hidden" name="model.CityName" value="@company.CityName" />
                                            <input type="hidden" name="model.EIN" value="@company.EIN" />
                                            <input type="hidden" name="model.IsActivated" value="@company.IsActivated" />
                                        </form>
                                    </td>
                                    <td>Gabriel</td>
                                    <td>Isidorio</td>
                                    <td>25</td>
                                    <td>Sim</td>
                                </tr>
                            }*@
                    </tbody>

                </table>
                <div>
                    <nav aria-label="Page navigation example">
                        <ul class="pagination">
                            <li class="page-item previous"><a class="page-link" href="#">Previous</a></li>
                            <li class="page-item next"><a class="page-link" href="#">Next</a></li>

                            <select id="qtdRegistrosExibidos">
                                <option class="paginasExibidas">10</option>
                                <option class="paginasExibidas">20</option>
                                <option class="paginasExibidas">30</option>
                            </select>
                        </ul>
                    </nav>
                </div>

                <div class="row">
                    <div class="col-md-12 btn-buttons">
                        <button class="btn btn-lg btn-primary btn-block" id="btnNext" data-toggle="modal" data-target="#AddFAQModal">Add</button>
                        <button type="button" class="btn btn-lg btn-primary btn-block" id="btnCancel">Back</button>
                    </div>
                </div>

                <!-- Modal -->
                <div class="modal fade bd-example-modal-xl show" id="AddFAQModal" tabindex="-1" role="dialog" aria-labelledby="myExtraLargeModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-xl" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="exampleModalLabel">Add FAQ</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <div class="container-field">
                                    <div>
                                        <label>Question</label>
                                    </div>
                                    <textarea class="form-control" id="txtAreaQuestion"></textarea>
                                </div>
                                <div class="container-field">
                                    <div>
                                        <label>Answer</label>
                                    </div>
                                    <textarea class="form-control" id="txtAreaAnswer"></textarea>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-success" id="btnSaveFAQ" data-dismiss="modal">Save</button>
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div><!-- /card-container -->
    </div><!-- /container -->

    <div class="container">
        <div class="card card-container">
            <div id="tabela">
                <h3 class="table-title">Keywords</h3>
                <table id="tblCustomers" class="table table-bordered table-sm">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Word</th>
                            <th>Register Date</th>
                        </tr>
                    </thead>
                    <tbody id="tblBodyKeywords">
                        @*@foreach (var company in Model)
                            {
                                <tr>
                                    <td>
                                        <form action="/Companies/EditForm" method="post" id="editFormId">
                                            <input type="hidden" name="model.Id" value="@company.Id" />
                                            <input type="hidden" name="model.Name" value="@company.Name" />
                                            <input type="hidden" name="model.CityName" value="@company.CityName" />
                                            <input type="hidden" name="model.EIN" value="@company.EIN" />
                                            <input type="hidden" name="model.IsActivated" value="@company.IsActivated" />
                                        </form>
                                    </td>
                                    <td>Gabriel</td>
                                    <td>Isidorio</td>
                                    <td>25</td>
                                    <td>Sim</td>
                                </tr>
                            }*@
                    </tbody>

                </table>
                <div>
                    <nav aria-label="Page navigation example">
                        <ul class="pagination">
                            <li class="page-item previous"><a class="page-link" href="#">Previous</a></li>
                            <li class="page-item next"><a class="page-link" href="#">Next</a></li>

                            <select id="qtdRegistrosExibidos">
                                <option class="paginasExibidas">10</option>
                                <option class="paginasExibidas">20</option>
                                <option class="paginasExibidas">30</option>
                            </select>
                        </ul>
                    </nav>
                </div>

                <div class="row">
                    <div class="col-md-12 btn-buttons">
                        <button class="btn btn-lg btn-primary btn-block" id="btnNext" data-toggle="modal" data-target="#AddKeywordModal">Add</button>
                        <button type="button" class="btn btn-lg btn-primary btn-block" id="btnCancel">Back</button>
                    </div>
                </div>

                <!-- KEYWORD MODAL -->
                <div class="modal fade bd-example-modal-xl show" id="AddKeywordModal" tabindex="-1" role="dialog" aria-labelledby="myExtraLargeModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-xl" role="document">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="exampleModalLabel">Add a new keyword</h5>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body">
                                <table id="tblNewProduct" class="table table-bordered table-sm">
                                    <thead class="thead-dark">
                                        <tr>
                                            <th></th>
                                            <th>Id</th>
                                            <th>Word</th>
                                        </tr>
                                    </thead>
                                    <tbody id="tblBodyNewKeyword">
                                    </tbody>

                                </table>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-success" id="btnAddkeyword" data-dismiss="modal">Add</button>
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div><!-- /card-container -->
    </div><!-- /container -->

    <script src="~/Scripts/jquery-ui-1.12.1.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/jquery-3.0.0.js"></script>
    <script>
        var numero_atual_pagina = 1;

        $(function () {
            var qtd_registros_exibidos_pagina = 10;
            amountButtonsPage(keywords.length, qtd_registros_exibidos_pagina);
            update(qtd_registros_exibidos_pagina, numero_atual_pagina);
            updateFAQTable(qtd_registros_exibidos_pagina, numero_atual_pagina);
            updateKeywords(qtd_registros_exibidos_pagina, numero_atual_pagina);
            updateKeywordsNotInProductTable(qtd_registros_exibidos_pagina, numero_atual_pagina);
        });

        $('#btnSearch').on('click', function (e) {
            e.preventDefault();

            var CompanyObj = {
                EIN: $('#ein').val(),
                CityName: $('#CityName').val()
            };

            DynamicSearch(CompanyObj);
        });

        var keywords = @Html.Raw(Json.Encode(ViewBag.Keywords));
        var faqs = @Html.Raw(Json.Encode(ViewBag.FAQs));
        let keywords_not_in_product = @Html.Raw(Json.Encode(ViewBag.KeywordsNotInProduct));
        console.log(keywords)

        @*var products_not_stock = @Html.Raw(Json.Encode(ViewBag.ProductsNotStock));
        var product_obj = {};
        var product_element_delete;
        let stock_element;*@



        /* AO CLICAR NO NÚMERO DA PÁGINA, ELE RESGATA O NÚMERO DA PÁGINA
           E O ATRIBUI A UMA VARIÁVEL
           OBS: o 'on' TEM UM 'a.pagina' que é um tratamento para a inserção dinâmica de classe
           porque o 'a.pagina' é inserido via javascript */
        $('.pagination').on('click', 'a.pagina', function (e) {
            e.preventDefault();
            qtd_registros_exibidos_pagina = $('#qtdRegistrosExibidos').children('option:selected').text();
            numero_atual_pagina = $(this).html();
            update(qtd_registros_exibidos_pagina, numero_atual_pagina);
        });

        $('.pagination').on('click', 'li.next', function (e) {
            e.preventDefault();
            qtd_registros_exibidos_pagina = $('#qtdRegistrosExibidos').children('option:selected').text();
            var qtd_botoes_criados = amountButtonsPage(keywords.length, qtd_registros_exibidos_pagina);
            numero_atual_pagina = parseInt(numero_atual_pagina) + 1;
            if (numero_atual_pagina > qtd_botoes_criados)
                numero_atual_pagina = qtd_botoes_criados;
            numero_atual_pagina = numero_atual_pagina > qtd_botoes_criados ? numero_atual_pagina = qtd_botoes_criados : numero_atual_pagina;
            update(qtd_registros_exibidos_pagina, numero_atual_pagina);
        });

        $('.pagination').on('click', 'li.previous', function (e) {
            e.preventDefault();
            qtd_registros_exibidos_pagina = $('#qtdRegistrosExibidos').children('option:selected').text();
            numero_atual_pagina -= 1;
            numero_atual_pagina = numero_atual_pagina <= 0 ? 1 : numero_atual_pagina;
            update(qtd_registros_exibidos_pagina, numero_atual_pagina);
        });


        /* AO CLICAR NO NO COMBO (SELECT), ELE RESGATA A QUANTIDADE
           DE REGISTROS QUE SERÃO EXIBIDOS POR PÁGINA */
        //aqui também ocorrerá a exibição de mais de 10 páginas
        $('#qtdRegistrosExibidos').on('change', function (e) {
            var qtd_registros_exibidos = $(this).children('option:selected').text();

            if (numero_atual_pagina > amountButtonsPage(keywords.length, qtd_registros_exibidos))
                numero_atual_pagina = amountButtonsPage(keywords.length, qtd_registros_exibidos);
            else
                amountButtonsPage(keywords.length, qtd_registros_exibidos)

            update(qtd_registros_exibidos, numero_atual_pagina);
        });

        /* EVENTO DO BOTÃO QUE ESTÁ NO MODAL ADICIONAR  */
        $('#btnAdicionar').on('click', function (e) {
            e.preventDefault();

            var quantidade_paginas = $('.pagina').length;
            qtd_registros_exibidos_pagina = $('#qtdRegistrosExibidos').children('option:selected').text();


            var cliente = {
                nome: $('#txtNome').val(),
                sobrenome: $('#txtSobrenome').val(),
                idade: $('#txtIdade').val(),
                ativo: $('#txtAtivo').val()
            };

            keywords.push(cliente);
            update(qtd_registros_exibidos_pagina, quantidade_paginas);
        });

        $('#tblBodyKeywords').on('click', 'button#btnIdLink', function (e) {
            e.preventDefault();
            let product_id = $(this).html();
            stock_element = $(this).parent().children().eq(2);
            $('#txtProductId').val(product_id);
        });

        $('#tblBodyKeywords').on('click', 'button.btnLinkDelete', function (e) {
            e.preventDefault();

            var register_id = $(this).parent().find(':first-child').html();

            product_obj.CompanyId = $('#companyId').val();
            product_obj.ProductId = register_id;
            product_element_delete = $(this).parent();
        });

        $('#btnDelete').click(function (e) {
            e.preventDefault();

            product_obj = JSON.stringify({ 'Product': product_obj });

            $.ajax({
			    url: "@Url.Action("DeleteProduct", "Companies")",
			    contentType: 'application/json; charset=utf-8',
			    dataType: 'json',
			    type: 'POST',
                data: product_obj,
                success: function (results) {
                    product_element_delete.remove();
			    },
			    failure: function (response) {
			    }
		    });
        });

        $('#btnNovo').on('click', function (e) {
            e.preventDefault();

            $('#txtNome').val('');
            $('#txtSobrenome').val('');
            $('#txtIdade').val('');
            $('#txtAtivo').val('');

            $('#txtNome').focus();
        });


        /* ATUALIZA A TABELA */
        function update(qtd_registros_exibidos_pagina, nro_atual_pagina) {

            var calculo = qtd_registros_exibidos_pagina * nro_atual_pagina;
            var condicao_parada = calculo - qtd_registros_exibidos_pagina;
            var i = calculo - 1;

            $('#tblBodyKeywords').empty();
            while (i >= condicao_parada) {
                if (calculo > keywords.length) {
                    for (var indice = condicao_parada; indice < keywords.length; indice++) {
                        var nova_linha = createRegister(indice);
                        $('#tblBodyKeywords').append(nova_linha);
                    }
                    break;
                }

                var nova_linha = createRegister(i);
                $('#tblBodyKeywords').prepend(nova_linha);
                i--;
            }
        }

        /* CRIA A NOVA LINHA/REGISTRO NA TABELA QUEM TEM A PAGINAÇÃO E RETORNA A NOVA LINHA */
        function createRegister(indice) {
            var nova_linha = $('<tr></tr>');
            nova_linha = nova_linha.append('<button class=\"btnLink\" data-toggle="modal" id="btnIdLink" data-target="#ProductUpdateModal">' + keywords[indice].KeywordId +
                '</button>');
            nova_linha = nova_linha.append('<td>' + keywords[indice].Word + '</td>');
            nova_linha = nova_linha.append('<td>' + ToJavaScriptDate(keywords[indice].RegisterDate) + '</td>');
            nova_linha = nova_linha.append('<button class=\"btnLinkDelete\" data-toggle="modal" data-target="#ProductDeleteModal">' + "Delete" +
                '</button>');
            return nova_linha;
        }

        /* CRIA A QUANTIDADE DE BOTÕES DE PÁGINA PROPORCIONALMENTE A QUANTIDADE DE REGISTROS
           QUE SERÃO EXIBIDOS NA PÁGINA */
        function amountButtonsPage(qtd_total_registros, qtd_registros_exibidos_pagina) {

            var indice_botao = 1;
            qtd_botoes = qtd_total_registros / qtd_registros_exibidos_pagina;

            $('.pagina').remove(); // remove todos os botões
            while (indice_botao <= qtd_botoes) {
                var item_lista = $('<li class="page-item"></li>');
                var link_pagina = $('<a class="page-link">' + indice_botao + '</a></li>').addClass('pagina');
                item_lista.append(link_pagina);
                item_lista.insertBefore('.next');
                indice_botao++;
            }

            if (qtd_total_registros % qtd_registros_exibidos_pagina != 0) {
                var item_lista = $('<li class="page-item"></li>');
                var link_pagina = $('<a class="page-link">' + indice_botao + '</a></li>').addClass('pagina');
                item_lista.append(link_pagina);
                item_lista.insertBefore('.next');
            }

            return indice_botao;
        }

        /*  FAQS   */

        function updateFAQTable(qtd_registros_exibidos_pagina, nro_atual_pagina) {

            var calculo = qtd_registros_exibidos_pagina * nro_atual_pagina;
            var condicao_parada = calculo - qtd_registros_exibidos_pagina;
            var i = calculo - 1;

            $('#tblBodyFAQs').empty();
            while (i >= condicao_parada) {
                if (calculo > faqs.length) {
                    for (var indice = condicao_parada; indice < faqs.length; indice++) {
                        var nova_linha = createFAQRegister(indice);
                        $('#tblBodyFAQs').append(nova_linha);
                    }
                    break;
                }

                var nova_linha = createFAQRegister(i);
                $('#tblBodyFAQs').prepend(nova_linha);
                i--;
            }
        }
        
        /* CRIA A NOVA LINHA/REGISTRO NA TABELA QUEM TEM A PAGINAÇÃO E RETORNA A NOVA LINHA */
        function createFAQRegister(indice) {
            var nova_linha = $('<tr></tr>');
            nova_linha = nova_linha.append('<button class=\"btnLink\" data-toggle="modal" id="btnIdLink" data-target="#ProductUpdateModal">' + faqs[indice].Id +
                '</button>');
            nova_linha = nova_linha.append('<td>' + faqs[indice].Question + '</td>');
            nova_linha = nova_linha.append('<td>' + faqs[indice].Answer + '</td>');
            nova_linha = nova_linha.append('<td>' + ToJavaScriptDate(faqs[indice].RegisterDate) + '</td>');
            nova_linha = nova_linha.append('<button class=\"btnLinkDelete\" data-toggle="modal" data-target="#ProductDeleteModal">' + "Delete" +
                '</button>');
            return nova_linha;
        }


        $('#btnSaveFAQ').click(function (e) {
            e.preventDefault();

            let faq_obj = {
                Question: $('#txtAreaQuestion').val(),
                Answer: $('#txtAreaAnswer').val(),
                ProductId: $('#ProductId').val()
            };

            let question = faq_obj.Question;
            let answer = faq_obj.Answer;

            faq_obj = JSON.stringify({ 'model': faq_obj });

            console.log(faq_obj)

		    $.ajax({
			    url: "@Url.Action("Save", "FAQs")",
			    contentType: 'application/json; charset=utf-8',
			    dataType: 'json',
			    type: 'POST',
                data: faq_obj,
			    success: function (results) {
                    let tr_new_faq = $('<tr></tr>');
                    tr_new_faq = tr_new_faq.append('<button class=\"btnLink\" data-toggle="modal" id="btnIdLink" data-target="#ProductUpdateModal">' + results +
                        '</button>');
                    tr_new_faq = tr_new_faq.append('<td>' + question + '</td>');
                    tr_new_faq = tr_new_faq.append('<td>' + answer + '</td>');
                    $('#tblBodyFAQs').append(tr_new_faq);
			    },
			    failure: function (response) {
				    //console.log('Falha na Requisição Assícrona' + response);
			    }
		    });
        });
        /* END FAQS */

        /* BEGIN KEYWORDS */
        function updateKeywords(qtd_registros_exibidos_pagina, nro_atual_pagina) {
            qtd_registros_exibidos = 10;
            nro_atual_pagina = 1;
            let calculo_stock = qtd_registros_exibidos_pagina * nro_atual_pagina;
            let condicao_parada_stock = calculo_stock - qtd_registros_exibidos_pagina;
            let indice_stock = calculo_stock - 1;

            $('#tblBodyKeywords').empty();
            while (indice_stock >= condicao_parada_stock) {
                if (calculo_stock > keywords.length) {
                    for (var indice = condicao_parada_stock; indice < keywords.length; indice++) {
                        var nova_linha = createRegisterKeywords(indice);
                        $('#tblBodyKeywords').append(nova_linha);
                    }
                    break;
                }

                var nova_linha = createRegisterKeywords(indice_stock);
                $('#tblBodyKeywords').prepend(nova_linha);
                i--;
            }
        }

        function createRegisterKeywords(indice) {
            var nova_linha = $('<tr></tr>');
            nova_linha = nova_linha.append('<button class=\"btnLink\" data-toggle="modal" id="btnIdLink" data-target="#ProductUpdateModal">' + keywords[indice].KeywordId +
                '</button>');
            nova_linha = nova_linha.append('<td>' + keywords[indice].Word + '</td>');
            nova_linha = nova_linha.append('<td>' + ToJavaScriptDate(keywords[indice].RegisterDate) + '</td>');
            return nova_linha;
        }

        $('#btnAddkeyword').click(function (e) {
            e.preventDefault();

            // GET ALL CHECKBOX PRODUCTS SELECTED AND CONVER TO A LIST OF OBJECTS \\
            let keywords_selected = $('#tblBodyNewKeyword tr:has(input:checked)').map(function (i, v) {
                var $td = $('td', this);
                return {
                    ProductId: $('#ProductId').val(),
                    KeywordId: $td.eq(1).text(),
                    Name: $td.eq(2).text()
                }
            }).get();     

            console.log(keywords_selected);

            for (let i = 0; i < keywords_selected.length; i++) {
                let tr_new_keyword = $('<tr></tr>');
                tr_new_keyword = tr_new_keyword.append('<button class=\"btnLink\" data-toggle="modal" id="btnIdLink">' + keywords_selected[i].KeywordId +
                    '</button>');
                tr_new_keyword = tr_new_keyword.append('<td>' + keywords_selected[i].Name + '</td>');
                tr_new_keyword = tr_new_keyword.append('<td>' + 0 + '</td>');
                $('#tblBodyKeywords').append(tr_new_keyword);
            }

            console.log(keywords_selected)

            keywords_selected = JSON.stringify({ 'keywordsList': keywords_selected });

		    $.ajax({
			    url: "@Url.Action("SaveProductKeywords", "Products")",
			    contentType: 'application/json; charset=utf-8',
			    dataType: 'json',
			    type: 'POST',
                data: keywords_selected,
			    success: function (results) {
				    //$('#result').html('"PassThings()" successfully called.');
				    //console.log('Requisição Assícrona realizada com sucesso ' + results);
			    },
			    failure: function (response) {
				    //console.log('Falha na Requisição Assícrona' + response);
			    }
		    });
        });

        /* END KEYWORDS */

        /* KEYWORDS THAT ARE NOT IN PRODUCT SELECTED */

        function updateKeywordsNotInProductTable(qtd_registros_exibidos_pagina, nro_atual_pagina) {
            qtd_registros_exibidos = 10;
            nro_atual_pagina = 1;
            let calculo_stock = qtd_registros_exibidos_pagina * nro_atual_pagina;
            let condicao_parada_stock = calculo_stock - qtd_registros_exibidos_pagina;
            let indice_stock = calculo_stock - 1;

            $('#tblBodyNewKeyword').empty();
            while (indice_stock >= condicao_parada_stock) {
                if (calculo_stock > keywords_not_in_product.length) {
                    for (var indice = condicao_parada_stock; indice < keywords_not_in_product.length; indice++) {
                        var nova_linha = createRegisterKeywordsNotInProductTable(indice);
                        $('#tblBodyNewKeyword').append(nova_linha);
                    }
                    break;
                }

                var nova_linha = createRegisterKeywordsNotInProductTable(indice_stock);
                $('#tblBodyNewKeyword').prepend(nova_linha);
                i--;
            }
        }

        function createRegisterKeywordsNotInProductTable(indice) {
            var nova_linha = $('<tr></tr>');
            nova_linha = nova_linha.append('<td><input type="checkbox"></td>');
            nova_linha = nova_linha.append('<td>' + keywords_not_in_product[indice].Id + '</td>');
            nova_linha = nova_linha.append('<td>' + keywords_not_in_product[indice].Word + '</td>');
            return nova_linha;
        }

        /* END THAT ARE NOT IN PRODUCT SELECTED */

        /* CONVERTE UMA DATA EM FORMATO JSON PARA DATA EM FORMATO JS */
        function ToJavaScriptDate(value) {
            var pattern = /Date\(([^)]+)\)/;
            var results = pattern.exec(value);
            var dt = new Date(parseFloat(results[1]));
            return (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
        }


        @*/* REALIZA UMA BUSCA DINÂMICA PASSANDO UM OBJETO.
         * ESSE OBJETO POSSUI OS VALORES DOS CAMPOS DO FORM QUE FIZEMOS A BUSCA */
        function DynamicSearch(CompanyObj) {
            var obj_all_empty_fields = {
                all_empty_fields: true
            };
            var all_empty_fields = true;
            var create_register = false;

            $('#tblBody').empty();

            for (var i = 0; i < keywords.length; i++) {
                create_register = DynamicSearchConditions(CompanyObj.CityName, keywords[i].CityName, obj_all_empty_fields);

                if (obj_all_empty_fields.all_empty_fields) {
                    $('#tblBody').empty();
                    update(10, 1);
                }

                if (create_register) {
                    var novo_registro = createRegister(i);
                    $('#tblBody').append(novo_registro);
                }
            }
        }

        /* REALIZA AS CONDIÇÕES PARA QUE O REGISTRO SEJA INPUTADO NA TABELA
         * VERIFICA TAMBÉM SE TODOS OS CAMPOS SÃO VAZIOS
         * RETORNA VERDADEIRO PARA CRIAR UM REGISTRO DA BUSCA DINÂMICA */
        function DynamicSearchConditions(ObjAttribute, ListAttribute, obj_all_empty_fields) {
            if (ObjAttribute != "") {
                if (ObjAttribute == ListAttribute.substr(0, ObjAttribute.length))
                    create_register = true;
                else
                    create_register = false;
                obj_all_empty_fields.all_empty_fields = false;
            }

            return create_register;
        }

        function updateProductWithoutStock(qtd_registros_exibidos_pagina, nro_atual_pagina) {
            qtd_registros_exibidos = 10;
            nro_atual_pagina = 1;
            let calculo_stock = qtd_registros_exibidos_pagina * nro_atual_pagina;
            let condicao_parada_stock = calculo_stock - qtd_registros_exibidos_pagina;
            let indice_stock = calculo_stock - 1;

            $('#tblBodyNewProduct').empty();
            while (indice_stock >= condicao_parada_stock) {
                if (calculo_stock > products_not_stock.length) {
                    for (var indice = condicao_parada_stock; indice < products_not_stock.length; indice++) {
                        var nova_linha = createRegisterProductWithoutStock(indice);
                        $('#tblBodyNewProduct').append(nova_linha);
                    }
                    break;
                }

                var nova_linha = createRegisterProductWithoutStock(indice_stock);
                $('#tblBodyNewProduct').prepend(nova_linha);
                i--;
            }
        }

        function createRegisterProductWithoutStock(indice) {
            var nova_linha = $('<tr></tr>');
            nova_linha = nova_linha.append('<td><input type="checkbox"></td>');
            nova_linha = nova_linha.append('<td>' + products_not_stock[indice].Id + '</td>');
            nova_linha = nova_linha.append('<td>' + products_not_stock[indice].Name + '</td>');
            return nova_linha;
        }

        $('#btnAddProduct').click(function (e) {
            e.preventDefault();

            // GET ALL CHECKBOX PRODUCTS SELECTED AND CONVER TO A LIST OF OBJECTS \\
            let products_selected = $('#tblBodyNewProduct tr:has(input:checked)').map(function (i, v) {
                var $td = $('td', this);
                return {
                    CompanyId: $('#companyId').val(),
                    ProductId: $td.eq(1).text(),
                    Name: $td.eq(2).text()
                }
            }).get();

            console.log(products_selected);

            for (let i = 0; i < products_selected.length; i++) {
                let tr_new_product = $('<tr></tr>');
                tr_new_product = tr_new_product.append('<button class=\"btnLink\" data-toggle="modal" id="btnIdLink" data-target="#ProductUpdateModal">' + products_selected[i].ProductId +
                    '</button>');
                tr_new_product = tr_new_product.append('<td>' + products_selected[i].Name + '</td>');
                tr_new_product = tr_new_product.append('<td>' + 0 + '</td>');
                $('#tblBody').append(tr_new_product);
            }

            products_selected = JSON.stringify({ 'productsList': products_selected });

		    $.ajax({
			    url: "@Url.Action("SaveProductsCompany", "Companies")",
			    contentType: 'application/json; charset=utf-8',
			    dataType: 'json',
			    type: 'POST',
                data: products_selected,
			    success: function (results) {
				    //$('#result').html('"PassThings()" successfully called.');
				    //console.log('Requisição Assícrona realizada com sucesso ' + results);
			    },
			    failure: function (response) {
				    //console.log('Falha na Requisição Assícrona' + response);
			    }
		    });
        });

        $('#btnUpdateStockQuantity').click(function (e) {
            e.preventDefault();

            let stock_quantity = $('#txtStockQuantity').val();

            let stock_obj = {
                CompanyId: $('#companyId').val(),
                ProductId: $('#txtProductId').val(),
                StockQuantity: stock_quantity
            };

            stock_obj.StockQuantity = parseInt(stock_element.html()) + parseInt(stock_obj.StockQuantity);
            stock_element.html(stock_obj.StockQuantity);

            stock_obj = JSON.stringify({ 'productStock': stock_obj });

		    $.ajax({
			    url: "@Url.Action("UpdateProductCompanyStock", "Companies")",
			    contentType: 'application/json; charset=utf-8',
			    dataType: 'json',
			    type: 'POST',
                data: stock_obj,
			    success: function (results) {
				    //$('#result').html('"PassThings()" successfully called.');
				    //console.log('Requisição Assícrona realizada com sucesso ' + results);
			    },
			    failure: function (response) {
				    //console.log('Falha na Requisição Assícrona' + response);
			    }
		    });

            $('#txtStockQuantity').val('');
        });*@
    </script>
</body>
</html>
